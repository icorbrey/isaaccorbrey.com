---
import DotSeparated from "components/controls/DotSeparated.astro";
import TagLink from "components/tags/TagLink.astro";
import type { Tag } from "stores/tags";

type Props = {
  tagDescriptions: Tag[];
  readingTime: string;
  publishedOn?: Date;
  tags: string[];
  title: string;
};

const {
  publishedOn,
  tagDescriptions,
  readingTime,
  tags = [],
  title,
} = Astro.props;

const dateText =
  !!publishedOn ?
    `Published on ${new Date(publishedOn).toLocaleDateString("en-US", {
      timeZone: "UTC",
      year: "numeric",
      day: "numeric",
      month: "long",
    })}`
  : "Draft";

const _tags = tags.map((tag) => ({
  description: tagDescriptions.find((t) => t.id === tag)?.data?.description,
  tag,
}));
---

<header class="py-16">
  <h1 class="text-4xl sm:text-5xl font-bold text-fg-1">{title}</h1>
  <ul class="-mt-1 sm:mt-1 flex gap-2">
    {
      _tags.map(({ tag, description }) => (
        <li>
          <TagLink {description} href={`/tags/${tag}`}>
            {tag}
          </TagLink>
        </li>
      ))
    }
  </ul>
  <p aria-hidden="true" class="mt-4 text-lg hidden sm:flex">
    <DotSeparated>{dateText}</DotSeparated>
    <DotSeparated>{readingTime}</DotSeparated>
  </p>
  <p aria-hidden="true" class="mt-2 flex flex-col sm:hidden text-md">
    <span>{dateText}</span>
    <span class="-mt-1">{readingTime}</span>
  </p>
</header>
