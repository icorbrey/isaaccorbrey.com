---
import type { Note } from "stores/notes";
import { DateTime } from "luxon";

type Props = {
  highlightNew: boolean;
  notes: Note[];
};

const { highlightNew = false, notes = [] } = Astro.props;

const isNewNote = (note: Note) =>
  highlightNew &&
  DateTime.now().minus({ days: 40 }) <
    DateTime.fromJSDate(note.data.publishedOn!);

const isDraft = (note: Note) => !note.data.publishedOn;

const getPublishedDate = (note: Note) =>
  note.data.publishedOn?.toLocaleDateString("en-US", {
    timeZone: "UTC",
    year: "numeric",
    month: "long",
  }) ?? "";
---

{
  0 < notes.length ? (
    <ul class="w-full flex flex-col gap-1 sm:gap-0.5">
      {notes.map((note) => (
        <li>
          <a
            href={`/notes/${note.slug}`}
            class="group nounderline flex flex-col gap-0.5 sm:gap-0 sm:flex-row sm:justify-between"
          >
            <span class="text-xl group-hover:underline text-blue-300 group-hover:text-blue-400">
              {note.data.title}
            </span>
            {isDraft(note) ? (
              <span class="bg-fg-2 text-bg-1 text-[0.675rem] uppercase tracking-wide leading-none rounded px-1 py-1 self-start sm:self-center">
                Draft
              </span>
            ) : isNewNote(note) ? (
              <span class="flex flex-row items-center gap-2 text-base text-orange-400 font-medium">
                {getPublishedDate(note)}
                <span class="bg-orange-400 text-bg-1 text-[0.675rem] uppercase tracking-wide leading-none rounded px-1 py-1">
                  New!
                </span>
              </span>
            ) : (
              <span class="text-base">{getPublishedDate(note)}</span>
            )}
          </a>
        </li>
      ))}
    </ul>
  ) : (
    <p class="text-lg">Move along, nothing to see here.</p>
  )
}
